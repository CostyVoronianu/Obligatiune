<Window x:Class="BondAnalytics.Bond"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BondAnalytics"
         mc:Ignorable="d"
        Title="Bond" Height="600" Width="800"
        WindowStyle="None"
        ResizeMode="NoResize"
        MouseDown="Window_MouseDown"
        WindowStartupLocation="CenterScreen"
        AllowsTransparency="True">
    <Window.Resources>

        <ImageBrush x:Key="CloseBtn_MouseOver" ImageSource="Assets1/close_over.png"/>

        <Style x:Key="Close_btn" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="button"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver"
                                     Value="True">

                                <Setter Property="Background"
                                        TargetName="button"
                                        Value="{StaticResource CloseBtn_MouseOver}"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

        <Style x:Key="DatePickerStyle"  TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="DarkBlue" />
            <Setter Property="IsTodayHighlighted" Value="True" />
            <Setter Property="SelectedDateFormat" Value="Short" />
            <Setter Property="Background" Value="Transparent" />

        </Style>

        <Style x:Key="DatePickerTextBoxStyle" TargetType="DatePickerTextBox">
            <Setter Property="Visibility" Value="Hidden"/>


        </Style>


        <!-- <Style TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="5,0,5,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style> -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,2,40,2" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="true">
                            <Border Background="OrangeRed" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="5"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white" />
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                <Border BorderBrush="Red" BorderThickness="1" />
                            </AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <local:Validation x:Key="DataContext"/>
        <Thickness x:Key="Thickness1">1</Thickness>

    </Window.Resources>


    <StackPanel x:Name="hi" Background="#404751">
        <Grid Height="40">



            <Button Content="My Account" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" FontSize="15"  VerticalAlignment="Center" RenderTransformOrigin="0.456,0.656" Margin="625,-4,60,12"/>

            <Button x:Name="Settings" Width="30" Height="30" BorderThickness="0" Margin="740,0,30,10" >
                <Button.Background>
                    <ImageBrush ImageSource="Assets1/equalizer.png"/>
                </Button.Background>
            </Button>
            <Button x:Name="CloseBtn"    Width="25" Height="26"   BorderThickness="0" Style="{StaticResource Close_btn}"  Click="CloseBtnClick" Margin="775,2,0,12" RenderTransformOrigin="0.596,0.646" IsCancel="True">
                <Button.Background>
                    <ImageBrush ImageSource="Assets1/close_default.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>




            <Button x:Name="Home"    Width="25" Height="26"   BorderThickness="0" Margin="30,5,745,9" Click="HomeClick" >
                <Button.Background>
                    <ImageBrush ImageSource="Assets1/home.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>
            <Button x:Name="LogOut"    Width="25" Height="26"   BorderThickness="0" Margin="0,5,775,9" Click="LogOutClick" >
                <Button.Background>
                    <ImageBrush ImageSource="Assets1/logout.png" Stretch="Uniform"/>
                </Button.Background>
            </Button>


        </Grid>
        <Grid x:Name="panel" Height="70" >


            <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="10 0" >

                    <Button  Uid="0" Width="150" Content="BOND" Height="50" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White"  VerticalAlignment="Top"  Click="ButtonClick"/>
                    <Button  Uid="1" Width="150" Content="FXR" Height="50" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White"  VerticalAlignment="Top"  Click="ButtonClick"/>
                    <Button  Uid="2" Width="150" Content="INTEREST RATE" Height="50" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White"  VerticalAlignment="Top"  Click="ButtonClick"/>


                </StackPanel>

                <!---  <Grid x:Name="GridCursor" Width="150" Height="5" Background="White" HorizontalAlignment="Left"  /> -->
            </StackPanel>

        </Grid>
        <Grid x:Name="GridMain" Height="855" Background="White"  Margin="0,0,-146,0" DataContext="{StaticResource DataContext}">

            <Grid.RowDefinitions>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="30*"/>

                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="575*"/>
                <ColumnDefinition Width="371*"/>
            </Grid.ColumnDefinitions>
            <StackPanel   Orientation="Vertical"  Grid.Column="0" Margin="0,0,0.2,0.2" Grid.RowSpan="9">

                <Label Target="{Binding ElementName=Name}" Content="Name:"  Foreground="Black" FontSize="15" HorizontalAlignment="Left"/>
                <Label Target="{Binding ElementName=InterestRate}" Content="Interest rate:" Foreground="Black" FontSize="15" HorizontalAlignment="Left"/>
                <Label Target="{Binding ElementName=Ccy}" Content="Ccy:" Foreground="Black" FontSize="15" HorizontalAlignment="Left"/>
                <Label Target="{Binding ElementName=Principal}" Content="Principal:" Foreground="Black" FontSize="15" HorizontalAlignment="Left"/>
                <Label Target="{Binding ElementName=DayCountingConvention}" Content="Day Counting Convention:" Foreground="Black"   FontSize="15" HorizontalAlignment="Left"/>
                <Label Target="{Binding ElementName=StartPick}" Content="Start Date:" Foreground="Black" FontSize="15" HorizontalAlignment="Left"/>
                <Label Target="{Binding ElementName=EndPick}"  Content="End Date:" Foreground="Black" FontSize="15" HorizontalAlignment="Stretch" Margin="5,0,497,0"/>

            </StackPanel>


            <TextBox x:Name="Name" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=Name,
                        ValidatesOnDataErrors=true,   NotifyOnValidationError=true}" 
                     HorizontalAlignment="Left" Height="23" Margin="100,4,0,0" TextWrapping="Wrap" Background="White" Foreground="Black" VerticalAlignment="Top" Width="170" SelectionBrush="Black" BorderBrush="Black"/>
            <TextBox x:Name="InterestRate" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=InterestRate,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}"
                     HorizontalAlignment="Left" Height="23" Margin="100,32,0,0" TextWrapping="Wrap" Background="White" Foreground="Black" VerticalAlignment="Top" Width="170" SelectionBrush="Black" BorderBrush="Black"/>
            <TextBox x:Name="Ccy" 
                     Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=Ccy,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}"
                     HorizontalAlignment="Left" Height="23" Margin="100,61,0,0" TextWrapping="Wrap" Background="White" Foreground="Black" VerticalAlignment="Top" Width="170" SelectionBrush="Black" BorderBrush="Black"/>
            <TextBox x:Name="Principal" 
                     Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=Principal,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}"
                     HorizontalAlignment="Left" Height="23" Margin="100,95,0,0" TextWrapping="Wrap" Background="White" Foreground="Black" VerticalAlignment="Top" Width="170" SelectionBrush="Black" BorderBrush="Black"/>


            <DatePicker x:Name="EndPick" HorizontalAlignment="Left" Margin="100,68,0,0" Grid.Row="1" VerticalAlignment="Top" Foreground="Black" Style="{StaticResource DatePickerStyle }" Height="31" Width="239" Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=EndDate,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}" >
                <DatePicker.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                    </LinearGradientBrush>
                </DatePicker.Background>

            </DatePicker>

            <DatePicker x:Name="StartPick" HorizontalAlignment="Left" Margin="100,27,0,0" Grid.Row="1" VerticalAlignment="Top"  Foreground="Black" Style="{StaticResource DatePickerStyle }" Height="31" Width="239" RenderTransformOrigin="0.5,0.5"
                        Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=StartDate,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}">

                <DatePicker.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                    </LinearGradientBrush>
                </DatePicker.Background>
            </DatePicker>
            <Button x:Name="Save" Content="Save" HorizontalAlignment="Left" Margin="25,22.2,0,0" Grid.Row="2" VerticalAlignment="Top" Width="162" BorderBrush="#FFF7F2F2" Click="SaveClick" Height="34" Cursor="Hand" BorderThickness="{DynamicResource Thickness1}" Foreground="#FF151414" Background="White" FontSize="14" FontWeight="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" >

                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=Name, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=Ccy, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=Principal, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=InterestRate, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=DayCountingConvention, Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <ComboBox x:Name="DayCountingConvention" HorizontalAlignment="Left" Margin="231,121,0,0" VerticalAlignment="Top" Width="120" Background="White" BorderBrush="Black" Grid.RowSpan="2" 
                      Text="{Binding UpdateSourceTrigger=PropertyChanged, Path=DayCountingConvention,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}">
                <ComboBoxItem Content="ACT/ACT" HorizontalAlignment="Left" Width="118.4" Foreground="Black"/>
                <ComboBoxItem Content="ACT/365" HorizontalAlignment="Left" Width="118.4"  Foreground="Black"/>
            </ComboBox>
            <StackPanel Grid.Column="1" HorizontalAlignment="Left" Height="100" Margin="61,102,0,0" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Top" Width="100"/>
            <Button x:Name="Load" Content="Load" HorizontalAlignment="Left" Margin="226,22.2,0,0" Grid.Row="2" VerticalAlignment="Top" Width="150" BorderBrush="#FFF7F2F2" Background="#FFEAEAEA" Click="Load_Click">

            </Button>

        </Grid>



    </StackPanel>
</Window>
